body {
    margin: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    position: fixed;
    background-color: var(--background-color);
    transition: background-color 1s;

    --dash-bg-position-x1-from: 0;
    --dash-bg-position-x2-from: calc(min(4vw, 4vh) * 50);
    --dash-bg-position-x1-to: calc(min(4vw, 4vh) * 50);
    --dash-bg-position-x2-to: 0;
    --dash-switch-display-duration: 2s;

    --display-div-running-offset: min(4vw, 4vh);
    /* tan20° = 0.364, sin20° = 0.342, cos20° = 0.94 */
    --display-div-up: translate(min(100vw, calc(100vh / 0.364)), max(-100vh, calc(-100vw * 0.364)));
    --display-div-down: translate(max(-100vw, calc(-100vh / 0.364)), min(100vh, calc(100vw * 0.364)));
    --display-div-running-from: translate(calc(var(--display-div-running-offset) * 0.94), calc((-1) * var(--display-div-running-offset) * 0.342));
    --display-div-running-to: translate(calc((-1) * var(--display-div-running-offset) * 0.94), calc(var(--display-div-running-offset) * 0.342));
}

/* background div */

#bg-div {
    position: absolute;
    width: 100%;
    height: 100%;
}

#rect-shape, #bg-border {
    position: absolute;
    width: calc(100vh + 100vw);
    height: min(85vh, 85vw);
    transform: translate(calc(50vw - 50%), calc(50vh - 50%)) rotate(-20deg);
    background-color: var(--foreground-color);
    transition: background-color 1s;
}

#bg-border {
    height: calc(min(85vh, 85vw) - min(4vw, 4vh));
    background: linear-gradient(90deg, black 50%, transparent 50%) repeat-x, linear-gradient(90deg, black 50%, transparent 50%) repeat-x;
    filter: var(--background-color-filter);
    background-size: min(4vw, 4vh) min(6vw, 6vh), min(4vw, 4vh) min(6vw, 6vh);
    animation: dash-animation 1s infinite linear;
    transition: filter 1s;
}

#bg-border.forward-switch-display {
    animation: dash-forward-switch-display var(--dash-switch-display-duration) cubic-bezier(1, 0.04, 0, 0.96);
}

#bg-border.backward-switch-display {
    animation: dash-backward-switch-display var(--dash-switch-display-duration) cubic-bezier(1,-0.04, 0, 1.04);
}

@keyframes dash-animation {
    from {
        background-position: 0 0, min(4vw, 4vh) 100%;
    }
    to {
        background-position: min(4vw, 4vh) 0, 0 100%;
    }
}

@keyframes dash-forward-switch-display {
    from {
        background-position: var(--dash-bg-position-x1-from) 0, var(--dash-bg-position-x2-from) 100%;
    }
    to {
        background-position: var(--dash-bg-position-x1-to) 0, var(--dash-bg-position-x2-to) 100%;
    }
}

@keyframes dash-backward-switch-display {
    from {
        background-position: var(--dash-bg-position-x2-from) 0, var(--dash-bg-position-x1-from) 100%;
    }
    to {
        background-position: var(--dash-bg-position-x2-to) 0, var(--dash-bg-position-x1-to) 100%;
    }
}

/* display div */

#display-div {
    position: absolute;
    display: flex;
    width: 100vw;
    height: 100vh;
    left: 0;
    top: 0;
}

#display-div.forward_appear {
    animation: display-div-forward-appear 1s cubic-bezier(0, 0, 0, 1);
}

#display-div.backward_appear {
    animation: display-div-backward-appear 1s cubic-bezier(0, 0, 0, 1);
}

#display-div.forward_disappear {
    animation: display-div-forward-disappear 1s cubic-bezier(1, 0, 1, 1);
}

#display-div.backward_disappear {
    animation: display-div-backward-disappear 1s cubic-bezier(1, 0, 1, 1);
}

#display-div-wrapper {
    transform: var(--display-div-running-from);
}

#display-div-wrapper.paused {
    transform: translate(0, 0);
    transition: transform 0.5s ease-in-out;
}

#display-div-wrapper.running {
    transform: var(--display-div-running-to);
    transition: transform 8s linear;
}

#left-arrow-wrapper.disappear {
    animation: none;
    transform: var(--display-div-down);
    transition: transform 1s cubic-bezier(1, 0, 1, 1);
}

#right-arrow-wrapper.disappear {
    animation: none;
    transform: var(--display-div-up);
    transition: transform 1s cubic-bezier(1, 0, 1, 1);
}

#left-arrow-wrapper {
    animation: down-appear 1s cubic-bezier(0, 0, 0, 1);
}

#right-arrow-wrapper {
    animation: up-appear 1s cubic-bezier(0, 0, 0, 1);
}

@keyframes display-div-forward-appear {
    from { transform: var(--display-div-up); }
    to { transform: translate(0, 0); }
}

@keyframes display-div-backward-appear {
    from { transform: var(--display-div-down); }
    to { transform: translate(0, 0); }
}

@keyframes display-div-forward-disappear {
    from { transform: translate(0, 0); }
    to { transform: var(--display-div-down); }
}

@keyframes display-div-backward-disappear {
    from { transform: translate(0, 0); }
    to { transform: var(--display-div-up); }
}

@keyframes down-appear {
    from { transform: var(--display-div-up); }
    to { transform: translate(0, 0); }
}

@keyframes up-appear {
    from { transform: var(--display-div-down); }
    to { transform: translate(0, 0); }
}

/* interaction div */

#interaction-div.disabled {
    pointer-events: none;
}

#right-arrow, #left-arrow {
    position: absolute;
    width: calc(100vh + 100vw);
    height: max(100vh, 100vw);
    color: var(--foreground-color);
    transition: color 1s, font-variation-settings 0.3s;
    text-align: center;
    cursor: pointer;
    z-index: 10;
    font: min(16vw, 16vh) Recursive;
    font-variation-settings: "MONO" 0, "CASL" 1, "wght" 600, "slnt" 0, "CRSV" 0.5;
    font-variant-ligatures: discretionary-ligatures;
}

#right-arrow {
    /* sin20° = 0.342, cos20° = 0.94 */
    --right-arrow-offset-x: calc(min(20vh, 20vw) * 0.94);
    --right-arrow-offset-y: calc(min(20vh, 20vw) * -0.342);
    transform: translate(calc(50vw - 50% + (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.342 + var(--right-arrow-offset-x)), calc(50vh - 50% + (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.94 + var(--right-arrow-offset-y))) rotate(-20deg);
    animation: right-arrow-dance 1s infinite ease-in-out alternate;
}

#left-arrow {
    /* sin20° = 0.342, cos20° = 0.94 */
    --left-arrow-offset-x: calc(min(20vh, 20vw) * -0.94);
    --left-arrow-offset-y: calc(min(20vh, 20vw) * 0.342);
    transform: translate(calc(50vw - 50% - (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.342 + var(--left-arrow-offset-x)), calc(50vh - 50% - (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.94 + var(--left-arrow-offset-y))) rotate(160deg);
    animation: left-arrow-dance 1s infinite ease-in-out alternate;
}

@media (hover: hover) and (pointer: fine) {
    #right-arrow:hover, #left-arrow:hover {
        font-variation-settings: "MONO" 0, "CASL" 1, "wght" 800, "slnt" 0, "CRSV" 0.5;
    }
}

#right-arrow.on-touch, #left-arrow.on-touch {
    font-variation-settings: "MONO" 0, "CASL" 1, "wght" 800, "slnt" 0, "CRSV" 0.5;
}

@keyframes right-arrow-dance {
    from {
        transform: translate(calc(50vw - 50% + (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.342 + var(--right-arrow-offset-x) * 0.96), calc(50vh - 50% + (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.94 + var(--right-arrow-offset-y) * 0.96)) rotate(-20deg);
    }
    to {
        transform: translate(calc(50vw - 50% + (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.342 + var(--right-arrow-offset-x) * 1.04), calc(50vh - 50% + (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.94 + var(--right-arrow-offset-y) * 1.04)) rotate(-20deg);
    }
}

@keyframes left-arrow-dance {
    from {
        transform: translate(calc(50vw - 50% - (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.342 + var(--left-arrow-offset-x) * 0.96), calc(50vh - 50% - (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.94 + var(--left-arrow-offset-y) * 0.96)) rotate(160deg);
    }
    to {
        transform: translate(calc(50vw - 50% - (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.342 + var(--left-arrow-offset-x) * 1.04), calc(50vh - 50% - (min(42.5vh, 42.5vw) + max(50vh, 50vw)) * 0.94 + var(--left-arrow-offset-y) * 1.04)) rotate(160deg);
    }
}
